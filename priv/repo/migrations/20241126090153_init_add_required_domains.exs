defmodule AutomatedAgency.Repo.Migrations.InitAddRequiredDomains do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:ux_criticisms, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :severity, :text
      add :criticism, :text
      add :explanation, :text
      add :ux_analysis_id, :uuid
    end

    create table(:ux_analyses, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:ux_criticisms) do
      modify :ux_analysis_id,
             references(:ux_analyses,
               column: :id,
               name: "ux_criticisms_ux_analysis_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:ux_analyses) do
      add :page_id, :uuid
    end

    create table(:topic_analyses, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :primary_category, :text
      add :page_id, :uuid
    end

    create table(:speed_analyses, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :desktop_data, :map
      add :mobile_data, :map
      add :page_id, :uuid
    end

    create table(:pages, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:ux_analyses) do
      modify :page_id,
             references(:pages,
               column: :id,
               name: "ux_analyses_page_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:topic_analyses) do
      modify :page_id,
             references(:pages,
               column: :id,
               name: "topic_analyses_page_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:speed_analyses) do
      modify :page_id,
             references(:pages,
               column: :id,
               name: "speed_analyses_page_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:pages) do
      add :url, :text
      add :html, :text
      add :domain_id, :uuid
    end

    create table(:keywords, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :keyword, :text

      add :topic_analysis_id,
          references(:topic_analyses,
            column: :id,
            name: "keywords_topic_analysis_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create table(:improved_pages, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :html, :text

      add :page_id,
          references(:pages,
            column: :id,
            name: "improved_pages_page_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end

    create table(:domains, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:pages) do
      modify :domain_id,
             references(:domains,
               column: :id,
               name: "pages_domain_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:domains) do
      add :domain, :text
    end
  end

  def down do
    alter table(:domains) do
      remove :domain
    end

    drop constraint(:pages, "pages_domain_id_fkey")

    alter table(:pages) do
      modify :domain_id, :uuid
    end

    drop table(:domains)

    drop constraint(:improved_pages, "improved_pages_page_id_fkey")

    drop table(:improved_pages)

    drop constraint(:keywords, "keywords_topic_analysis_id_fkey")

    drop table(:keywords)

    alter table(:pages) do
      remove :domain_id
      remove :html
      remove :url
    end

    drop constraint(:speed_analyses, "speed_analyses_page_id_fkey")

    alter table(:speed_analyses) do
      modify :page_id, :uuid
    end

    drop constraint(:topic_analyses, "topic_analyses_page_id_fkey")

    alter table(:topic_analyses) do
      modify :page_id, :uuid
    end

    drop constraint(:ux_analyses, "ux_analyses_page_id_fkey")

    alter table(:ux_analyses) do
      modify :page_id, :uuid
    end

    drop table(:pages)

    drop table(:speed_analyses)

    drop table(:topic_analyses)

    alter table(:ux_analyses) do
      remove :page_id
    end

    drop constraint(:ux_criticisms, "ux_criticisms_ux_analysis_id_fkey")

    alter table(:ux_criticisms) do
      modify :ux_analysis_id, :uuid
    end

    drop table(:ux_analyses)

    drop table(:ux_criticisms)
  end
end
